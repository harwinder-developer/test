<?php
/*
Plugin Name: Philanthropy Project - Manual Override
Plugin URI: http://philanthropyproject.com/
Description: A simple plugin to get you out of a tight spot :)
Version: 0.1
Author: Studio 164a
Author URI: http://164a.com
*/

/**
 * Generated by the WordPress Meta Box generator
 * at http://jeremyhixon.com/wp-tools/meta-box/
 */

function pp_amount_raised_get_meta( $value ) {
    global $post;

    $field = get_post_meta( $post->ID, $value, true );
    if ( ! empty( $field ) ) {
        return stripslashes( wp_kses_decode_entities( $field ) );
    } else {
        return false;
    }
}

function pp_amount_raised_add_meta_box() {
    add_meta_box(
        'pp_amount_raised-amount-raised',
        __( 'Amount Raised', 'pp_amount_raised' ),
        'pp_amount_raised_pp_amount_raised_html',
        'download',
        'normal',
        'default'
    );
}
add_action( 'add_meta_boxes', 'pp_amount_raised_add_meta_box' );

function pp_amount_raised_pp_amount_raised_html( $post) {
    wp_nonce_field( '_pp_amount_raised_pp_amount_raised_nonce', 'pp_amount_raised_pp_amount_raised_nonce' ); ?>

    <p>Set an amount manually to override the calculated total of funds raised.</p>

    <p>
        <label for="pp_amount_raised_pp_amount_raised_amount"><?php _e( 'Amount', 'pp_amount_raised' ); ?></label><br>
        <input type="text" name="pp_amount_raised_pp_amount_raised_amount" id="pp_amount_raised_pp_amount_raised_amount" value="<?php echo pp_amount_raised_get_meta( 'pp_amount_raised_pp_amount_raised_amount' ); ?>">
    </p>    <p>
        <label for="pp_amount_raised_pp_amount_raised_number_of_backers"><?php _e( 'Number of backers', 'pp_amount_raised' ); ?></label><br>
        <input type="text" name="pp_amount_raised_pp_amount_raised_number_of_backers" id="pp_amount_raised_pp_amount_raised_number_of_backers" value="<?php echo pp_amount_raised_get_meta( 'pp_amount_raised_pp_amount_raised_number_of_backers' ); ?>">
    </p><?php
}

function pp_amount_raised_pp_amount_raised_save( $post_id ) {
    if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) return;
    if ( ! isset( $_POST['pp_amount_raised_pp_amount_raised_nonce'] ) || ! wp_verify_nonce( $_POST['pp_amount_raised_pp_amount_raised_nonce'], '_pp_amount_raised_pp_amount_raised_nonce' ) ) return;
    if ( ! current_user_can( 'edit_post' ) ) return;

    if ( isset( $_POST['pp_amount_raised_pp_amount_raised_amount'] ) )
        update_post_meta( $post_id, 'pp_amount_raised_pp_amount_raised_amount', esc_attr( $_POST['pp_amount_raised_pp_amount_raised_amount'] ) );
    if ( isset( $_POST['pp_amount_raised_pp_amount_raised_number_of_backers'] ) )
        update_post_meta( $post_id, 'pp_amount_raised_pp_amount_raised_number_of_backers', esc_attr( $_POST['pp_amount_raised_pp_amount_raised_number_of_backers'] ) );
}
add_action( 'save_post', 'pp_amount_raised_pp_amount_raised_save' );

/*
    Usage: pp_amount_raised_get_meta( 'pp_amount_raised_pp_amount_raised_amount' )
    Usage: pp_amount_raised_get_meta( 'pp_amount_raised_pp_amount_raised_number_of_backers' )
*/

function pp_atcf_campaign_current_amount( $amount, $campaign ) {
    $amount = get_post_meta( $campaign->ID, 'pp_amount_raised_pp_amount_raised_amount', true );

    if ( empty( $amount ) ) {
        return 0;
    }

    return $amount;
}

add_filter( 'atcf_campaign_current_amount', 'pp_atcf_campaign_current_amount', 10, 2 );

function pp_atcf_campaign_backers_count( $backer_count, $campaign ) {
    $total = get_post_meta( $campaign->ID, 'pp_amount_raised_pp_amount_raised_number_of_backers', true );

    if ( empty( $total ) ) {
        return $backer_count;
    }

    return $total;
}

add_filter( 'atcf_campaign_backers_count', 'pp_atcf_campaign_backers_count', 10, 2 );